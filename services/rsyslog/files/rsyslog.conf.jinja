#  /etc/rsyslog.conf    Configuration file for rsyslog.
#
#                       For more information see
#                       /usr/share/doc/rsyslog-doc/html/rsyslog_conf.html


#################
#### MODULES ####
#################

$ModLoad imuxsock # provides support for local system logging
{% if config.imkllog|default(true) %}
$ModLoad imklog   # provides kernel logging support (previously done by rklogd)
{% endif %}
$ModLoad immark  # provides --MARK-- message capability

$ModLoad imfile

{% if config.listenudp|default(false) %}
# provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514
{% endif %}

{% if config.listentcp|default(false) %}
# provides TCP syslog reception
$ModLoad imtcp
$InputTCPServerRun 514
{% endif %}

###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_SyslogProtocol23Format
$ActionQueueType LinkedList # use asynchronous processing
$ActionQueueFileName /var/tmp/rsyslog-cache # set file name, also enables disk mode
$ActionResumeRetryCount -1 # infinite retries on insert failure
$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down

#
# Set the default permissions for all log files.
#
$FileOwner syslog
$FileGroup syslog
$PrivDropToUser syslog
$PrivDropToGroup syslog
$FileCreateMode {{ config.get('filemode', '0644') }}
$DirCreateMode {{ config.get('dirmode', '0755') }}
$Umask 0022

$PreserveFQDN on
#
#
#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf


###############
#### RULES ####
###############

{% if grains['class'] == "syslog" %}
$template DailyTemplate,"/data/logs/%$YEAR%/%$MONTH%/%$DAY%/%FROMHOST%/%syslogfacility-text%.log"
template(name="DailyPerHost_app" type="string" "/data/logs/%$YEAR%/%$MONTH%/%$DAY%/%FROMHOST%/%programname%.log"

if $fromhost != "localhost" then {
                action(type="omfile" DynaFile="DailyPerHost_app")
                stop
}


#:source, !isequal, "localhost" -?DailyTemplate
#:source, !isequal, "localhost" stop
{% endif %}

#
# First some standard log files.  Log by facility.
#
auth,authpriv.*                 /var/log/auth.log
*.*;auth,authpriv.none          -/var/log/syslog
cron.*                         /var/log/cron.log
daemon.*                        -/var/log/daemon.log
kern.*                          -/var/log/kern.log
lpr.*                           -/var/log/lpr.log
mail.*                          -/var/log/mail.log
user.*                          -/var/log/user.log

#
# Logging for the mail system.  Split it up so that
# it is easy to write scripts to parse these files.
#
mail.info                       -/var/log/mail.info
mail.warn                       -/var/log/mail.warn
mail.err                        /var/log/mail.err

#
# Logging for INN news system.
#
news.crit                       /var/log/news/news.crit
news.err                        /var/log/news/news.err
news.notice                     -/var/log/news/news.notice

#
# Some "catch-all" log files.
#
*.=debug;\
        auth,authpriv.none;\
        news.none;mail.none     -/var/log/debug
*.=info;*.=notice;*.=warn;\
        auth,authpriv.none;\
        cron,daemon.none;\
        mail,news.none          -/var/log/messages

#
# Emergencies are sent to everybody logged in.
#
*.emerg                         *

#
# I like to have messages displayed on the console, but only on a virtual
# console I usually leave idle.
#
#daemon,mail.*;\
#       news.=crit;news.=err;news.=notice;\
#       *.=debug;*.=info;\
#       *.=notice;*.=warn       /dev/tty8

# The named pipe /dev/xconsole is for the `xconsole' utility.  To use it,
# you must invoke `xconsole' with the `-file' option:
#
#    $ xconsole -file /dev/xconsole [...]
#
# NOTE: adjust the list below, or you'll go crazy if you have a reasonably
#      busy site..
#

#{% if config.target|default(false) %}
#$ModLoad omrelp
#*.* :omrelp:{{ config.target }}:2514
#{% endif %}

#{% if grains['class'] == "syslog" %}
#$template DailyPerHostLogs,"{{ config.logbasepath }}/%$YEAR%/%$MONTH%/%$DAY%/%HOSTNAME%-%FROMHOST-IP%.log"
#*.* -?DailyPerHostLogs
#{% endif %}
